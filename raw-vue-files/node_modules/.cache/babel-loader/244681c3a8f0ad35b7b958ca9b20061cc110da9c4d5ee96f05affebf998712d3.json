{"ast":null,"code":"import { renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode, vModelSelect as _vModelSelect, withDirectives as _withDirectives, normalizeClass as _normalizeClass } from \"vue\";\nconst _hoisted_1 = {\n  class: \"order\"\n};\nconst _hoisted_2 = [\"onClick\"];\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"option\", {\n  value: \"20\"\n}, \"20\", -1 /* HOISTED */);\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"option\", {\n  value: \"30\"\n}, \"30\", -1 /* HOISTED */);\nconst _hoisted_5 = /*#__PURE__*/_createElementVNode(\"option\", {\n  value: \"50\"\n}, \"50\", -1 /* HOISTED */);\nconst _hoisted_6 = [_hoisted_3, _hoisted_4, _hoisted_5];\nconst _hoisted_7 = {\n  id: \"orderTable\"\n};\nconst _hoisted_8 = /*#__PURE__*/_createElementVNode(\"thead\", null, [/*#__PURE__*/_createElementVNode(\"tr\", null, [/*#__PURE__*/_createElementVNode(\"th\", null, \"주문상태\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"주문번호\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"결제일시\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"구매자명\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"구매자ID\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"수취인명\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"상품번호\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"상품명\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"수량\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"가격\")])], -1 /* HOISTED */);\nconst _hoisted_9 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.orderStatuses, status => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: status,\n      class: \"status-item\"\n    }, [_createElementVNode(\"h2\", {\n      onClick: $event => $options.filterOrdersByStatus(status)\n    }, _toDisplayString(status) + \" (\" + _toDisplayString($options.getOrderCountByStatus(status)) + \") \", 9 /* TEXT, PROPS */, _hoisted_2)]);\n  }), 128 /* KEYED_FRAGMENT */)), _withDirectives(_createElementVNode(\"select\", {\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.ordersPerPage = $event)\n  }, _hoisted_6, 512 /* NEED_PATCH */), [[_vModelSelect, $data.ordersPerPage]])]), _createElementVNode(\"table\", _hoisted_7, [_hoisted_8, _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.displayedOrders, (order, index) => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: index\n    }, [_createElementVNode(\"td\", null, _toDisplayString(order.orderStatus), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(order.orderNumber), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(order.paymentDate), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(order.buyerName), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(order.buyerID), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(order.recipientName), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(order.productNumber), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(order.productName), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(order.quantity), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(order.price), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))])]), _createElementVNode(\"div\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.totalPages, page => {\n    return _openBlock(), _createElementBlock(\"button\", {\n      class: _normalizeClass([\"orderPageNumberBtn\", {\n        active: $data.currentPage === page\n      }]),\n      key: page,\n      onClick: $event => $options.setCurrentPage(page)\n    }, _toDisplayString(page), 11 /* TEXT, CLASS, PROPS */, _hoisted_9);\n  }), 128 /* KEYED_FRAGMENT */))])]);\n}","map":{"version":3,"names":["class","_createElementVNode","value","_hoisted_3","_hoisted_4","_hoisted_5","id","_createElementBlock","_hoisted_1","_Fragment","_renderList","$data","orderStatuses","status","key","onClick","$event","$options","filterOrdersByStatus","_toDisplayString","getOrderCountByStatus","_hoisted_2","ordersPerPage","_hoisted_7","_hoisted_8","displayedOrders","order","index","orderStatus","orderNumber","paymentDate","buyerName","buyerID","recipientName","productNumber","productName","quantity","price","totalPages","page","_normalizeClass","active","currentPage","setCurrentPage","_hoisted_9"],"sources":["D:\\바탕화면 파일\\Dev\\html\\vue-web-asgm\\src\\views\\OrderView.vue"],"sourcesContent":["<template>\r\n    <div class=\"order\">\r\n      <div>\r\n        <div v-for=\"status in orderStatuses\" :key=\"status\" class=\"status-item\">\r\n          <h2 @click=\"filterOrdersByStatus(status)\">\r\n            {{ status }} ({{ getOrderCountByStatus(status) }})\r\n          </h2>\r\n        </div>\r\n        <select v-model=\"ordersPerPage\">\r\n          <option value=\"20\">20</option>\r\n          <option value=\"30\">30</option>\r\n          <option value=\"50\">50</option>\r\n        </select>\r\n      </div>\r\n      <table id=\"orderTable\">\r\n        <thead>\r\n          <tr>\r\n            <th>주문상태</th>\r\n            <th>주문번호</th>\r\n            <th>결제일시</th>\r\n            <th>구매자명</th>\r\n            <th>구매자ID</th>\r\n            <th>수취인명</th>\r\n            <th>상품번호</th>\r\n            <th>상품명</th>\r\n            <th>수량</th>\r\n            <th>가격</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr v-for=\"(order, index) in displayedOrders\" :key=\"index\">\r\n            <td>{{ order.orderStatus }}</td>\r\n            <td>{{ order.orderNumber }}</td>\r\n            <td>{{ order.paymentDate }}</td>\r\n            <td>{{ order.buyerName }}</td>\r\n            <td>{{ order.buyerID }}</td>\r\n            <td>{{ order.recipientName }}</td>\r\n            <td>{{ order.productNumber }}</td>\r\n            <td>{{ order.productName }}</td>\r\n            <td>{{ order.quantity }}</td>\r\n            <td>{{ order.price }}</td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n      <div>\r\n        <button class=\"orderPageNumberBtn\" v-for=\"page in totalPages\" :key=\"page\" :class=\"{ active: currentPage === page }\" @click=\"setCurrentPage(page)\">{{ page }}</button>\r\n      </div>\r\n    </div>\r\n  </template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'OrderView',\r\n  data () {\r\n    return {\r\n      orderStatuses: ['결제완료', '상품준비중', '배송중', '배송완료', '취소주문'],\r\n      orders: [\r\n        { orderStatus: '결제완료', orderNumber: '10001', paymentDate: '2023-06-01 14:20:30', buyerName: '김철수', buyerID: 'KimCS01', recipientName: '김철수', productNumber: 'P01', productName: '볼펜', quantity: 2, price: 2000 },\r\n        { orderStatus: '상품준비중', orderNumber: '10002', paymentDate: '2023-06-01 16:45:00', buyerName: '이영희', buyerID: 'LeeYH02', recipientName: '이영희', productNumber: 'P02', productName: '연필', quantity: 3, price: 1500 },\r\n        { orderStatus: '배송중', orderNumber: '10003', paymentDate: '2023-06-02 11:05:20', buyerName: '박지성', buyerID: 'ParkJS03', recipientName: '박지성', productNumber: 'P03', productName: '공책', quantity: 5, price: 2500 },\r\n        { orderStatus: '배송완료', orderNumber: '10004', paymentDate: '2023-06-02 14:45:30', buyerName: '최은영', buyerID: 'ChoiEY04', recipientName: '최은영', productNumber: 'P04', productName: '마우스', quantity: 1, price: 10000 },\r\n        { orderStatus: '취소주문', orderNumber: '10005', paymentDate: '2023-06-03 09:20:30', buyerName: '김철수', buyerID: 'KimCS01', recipientName: '김철수', productNumber: 'P05', productName: '키보드', quantity: 1, price: 20000 },\r\n        { orderStatus: '결제완료', orderNumber: '10006', paymentDate: '2023-06-03 10:30:45', buyerName: '김영희', buyerID: 'KimYH06', recipientName: '김영희', productNumber: 'P06', productName: '형광펜', quantity: 4, price: 1000 },\r\n        { orderStatus: '상품준비중', orderNumber: '10007', paymentDate: '2023-06-03 12:15:00', buyerName: '이지성', buyerID: 'LeeJS07', recipientName: '이지성', productNumber: 'P07', productName: '화이트', quantity: 2, price: 3000 },\r\n        { orderStatus: '배송중', orderNumber: '10008', paymentDate: '2023-06-03 15:25:30', buyerName: '박철수', buyerID: 'ParkCS08', recipientName: '박철수', productNumber: 'P08', productName: '지우개', quantity: 3, price: 500 },\r\n        { orderStatus: '배송완료', orderNumber: '10009', paymentDate: '2023-06-03 17:45:10', buyerName: '최지성', buyerID: 'ChoiJS09', recipientName: '최지성', productNumber: 'P09', productName: '마스크', quantity: 10, price: 2000 },\r\n        { orderStatus: '취소주문', orderNumber: '10010', paymentDate: '2023-06-04 09:30:30', buyerName: '김영희', buyerID: 'KimYH06', recipientName: '김영희', productNumber: 'P10', productName: '커터칼', quantity: 1, price: 3000 },\r\n        { orderStatus: '결제완료', orderNumber: '10011', paymentDate: '2023-06-04 10:30:45', buyerName: '이수영', buyerID: 'LeeSY11', recipientName: '이수영', productNumber: 'P07', productName: '화이트', quantity: 1, price: 3000 },\r\n        { orderStatus: '상품준비중', orderNumber: '10012', paymentDate: '2023-06-04 11:45:00', buyerName: '박지성', buyerID: 'ParkJS03', recipientName: '박지성', productNumber: 'P10', productName: '커터칼', quantity: 2, price: 3000 },\r\n        { orderStatus: '배송중', orderNumber: '10013', paymentDate: '2023-06-04 14:15:30', buyerName: '최은영', buyerID: 'ChoiEY04', recipientName: '최은영', productNumber: 'P06', productName: '형광펜', quantity: 3, price: 1000 },\r\n        { orderStatus: '배송완료', orderNumber: '10014', paymentDate: '2023-06-04 17:05:10', buyerName: '김철수', buyerID: 'KimCS01', recipientName: '김철수', productNumber: 'P01', productName: '볼펜', quantity: 2, price: 2000 },\r\n        { orderStatus: '취소주문', orderNumber: '10015', paymentDate: '2023-06-04 18:30:30', buyerName: '이영희', buyerID: 'LeeYH02', recipientName: '이영희', productNumber: 'P02', productName: '연필', quantity: 1, price: 1500 },\r\n        { orderStatus: '결제완료', orderNumber: '10016', paymentDate: '2023-06-05 09:00:45', buyerName: '박철수', buyerID: 'ParkCS08', recipientName: '박철수', productNumber: 'P08', productName: '지우개', quantity: 4, price: 500 },\r\n        { orderStatus: '상품준비중', orderNumber: '10017', paymentDate: '2023-06-05 10:30:00', buyerName: '최지성', buyerID: 'ChoiJS09', recipientName: '최지성', productNumber: 'P03', productName: '공책', quantity: 3, price: 2500 },\r\n        { orderStatus: '배송중', orderNumber: '10018', paymentDate: '2023-06-05 12:15:30', buyerName: '김영희', buyerID: 'KimYH06', recipientName: '김영희', productNumber: 'P04', productName: '마우스', quantity: 1, price: 15000 },\r\n        { orderStatus: '배송완료', orderNumber: '10019', paymentDate: '2023-06-05 14:05:10', buyerName: '이수영', buyerID: 'LeeSY11', recipientName: '이수영', productNumber: 'P05', productName: '키보드', quantity: 1, price: 30000 },\r\n        { orderStatus: '취소주문', orderNumber: '10020', paymentDate: '2023-06-05 15:30:30', buyerName: '박지성', buyerID: 'ParkJS03', recipientName: '박지성', productNumber: 'P10', productName: '커터칼', quantity: 2, price: 3000 },\r\n        { orderStatus: '결제완료', orderNumber: '10021', paymentDate: '2023-06-06 10:30:45', buyerName: '최은영', buyerID: 'ChoiEY04', recipientName: '최은영', productNumber: 'P06', productName: '형광펜', quantity: 3, price: 1000 },\r\n        { orderStatus: '상품준비중', orderNumber: '10022', paymentDate: '2023-06-06 11:45:00', buyerName: '김철수', buyerID: 'KimCS01', recipientName: '김철수', productNumber: 'P07', productName: '화이트', quantity: 1, price: 3000 },\r\n        { orderStatus: '배송중', orderNumber: '10023', paymentDate: '2023-06-06 14:15:30', buyerName: '이영희', buyerID: 'LeeYH02', recipientName: '이영희', productNumber: 'P08', productName: '지우개', quantity: 5, price: 500 },\r\n        { orderStatus: '배송완료', orderNumber: '10024', paymentDate: '2023-06-06 17:05:10', buyerName: '박철수', buyerID: 'ParkCS08', recipientName: '박철수', productNumber: 'P09', productName: '마스크', quantity: 10, price: 2000 },\r\n        { orderStatus: '취소주문', orderNumber: '10025', paymentDate: '2023-06-06 18:30:30', buyerName: '최지성', buyerID: 'ChoiJS09', recipientName: '최지성', productNumber: 'P02', productName: '연필', quantity: 2, price: 1500 },\r\n        { orderStatus: '결제완료', orderNumber: '10026', paymentDate: '2023-06-07 09:00:45', buyerName: '김영희', buyerID: 'KimYH06', recipientName: '김영희', productNumber: 'P01', productName: '볼펜', quantity: 3, price: 2000 },\r\n        { orderStatus: '상품준비중', orderNumber: '10027', paymentDate: '2023-06-07 10:30:00', buyerName: '이수영', buyerID: 'LeeSY11', recipientName: '이수영', productNumber: 'P03', productName: '공책', quantity: 4, price: 2500 },\r\n        { orderStatus: '배송중', orderNumber: '10028', paymentDate: '2023-06-07 12:15:30', buyerName: '박지성', buyerID: 'ParkJS03', recipientName: '박지성', productNumber: 'P04', productName: '마우스', quantity: 2, price: 15000 },\r\n        { orderStatus: '배송완료', orderNumber: '10029', paymentDate: '2023-06-07 14:05:10', buyerName: '최은영', buyerID: 'ChoiEY04', recipientName: '최은영', productNumber: 'P05', productName: '키보드', quantity: 1, price: 30000 },\r\n        { orderStatus: '취소주문', orderNumber: '10030', paymentDate: '2023-06-07 15:30:30', buyerName: '김철수', buyerID: 'KimCS01', recipientName: '김철수', productNumber: 'P10', productName: '커터칼', quantity: 1, price: 3000 }\r\n      ],\r\n      currentPage: 1,\r\n      ordersPerPage: 20,\r\n      filteredStatus: ''\r\n    }\r\n  },\r\n  computed: {\r\n    totalPages () {\r\n      return Math.ceil(this.orders.length / this.ordersPerPage)\r\n    },\r\n    displayedOrders () {\r\n      const start = (this.currentPage - 1) * this.ordersPerPage\r\n      const end = start + this.ordersPerPage\r\n      return this.orders.slice(start, end).filter(order => this.filteredStatus === '' ? true : order.orderStatus === this.filteredStatus)\r\n    }\r\n  },\r\n  methods: {\r\n    getOrderCountByStatus (status) {\r\n      return this.orders.filter(order => order.orderStatus === status).length\r\n    },\r\n    setCurrentPage (page) {\r\n      this.currentPage = page\r\n    },\r\n    filterOrdersByStatus (status) {\r\n      this.filteredStatus = status\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style>\r\n    @import '@/style/order.css';\r\n</style>\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}