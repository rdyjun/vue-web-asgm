{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, vModelSelect as _vModelSelect, normalizeStyle as _normalizeStyle, pushScopeId as _pushScopeId, popScopeId as _popScopeId } from \"vue\";\nconst _withScopeId = n => (_pushScopeId(\"data-v-e92b9652\"), n = n(), _popScopeId(), n);\nconst _hoisted_1 = {\n  class: \"Notice\"\n};\nconst _hoisted_2 = {\n  id: \"noticeFilter\"\n};\nconst _hoisted_3 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", null, \"시작일:\", -1 /* HOISTED */));\nconst _hoisted_4 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", null, \"종료일:\", -1 /* HOISTED */));\nconst _hoisted_5 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"label\", null, \"카테고리:\", -1 /* HOISTED */));\nconst _hoisted_6 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"option\", {\n  value: \"\"\n}, \"All categories\", -1 /* HOISTED */));\nconst _hoisted_7 = [\"value\"];\nconst _hoisted_8 = {\n  id: \"noticeTable\"\n};\nconst _hoisted_9 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"colgroup\", null, [/*#__PURE__*/_createElementVNode(\"col\"), /*#__PURE__*/_createElementVNode(\"col\", {\n  class: \"s\"\n}), /*#__PURE__*/_createElementVNode(\"col\")], -1 /* HOISTED */));\nconst _hoisted_10 = /*#__PURE__*/_withScopeId(() => /*#__PURE__*/_createElementVNode(\"thead\", null, [/*#__PURE__*/_createElementVNode(\"tr\", null, [/*#__PURE__*/_createElementVNode(\"th\", null, \"번호\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"제목\"), /*#__PURE__*/_createElementVNode(\"th\", null, \"날짜\")])], -1 /* HOISTED */));\nconst _hoisted_11 = [\"onClick\", \"disabled\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_createElementVNode(\"div\", _hoisted_2, [_hoisted_3, _withDirectives(_createElementVNode(\"input\", {\n    type: \"date\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.filterStartDate = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.filterStartDate]]), _hoisted_4, _withDirectives(_createElementVNode(\"input\", {\n    type: \"date\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.filterEndDate = $event)\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.filterEndDate]]), _hoisted_5, _withDirectives(_createElementVNode(\"select\", {\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.filterCategory = $event)\n  }, [_hoisted_6, (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.noticeCategorys, itm => {\n    return _openBlock(), _createElementBlock(\"option\", {\n      key: itm,\n      value: itm\n    }, _toDisplayString(itm), 9 /* TEXT, PROPS */, _hoisted_7);\n  }), 128 /* KEYED_FRAGMENT */))], 512 /* NEED_PATCH */), [[_vModelSelect, $data.filterCategory]]), _createElementVNode(\"button\", {\n    onClick: _cache[3] || (_cache[3] = (...args) => $options.resetFilter && $options.resetFilter(...args))\n  }, \"필터 제거\")]), _createElementVNode(\"table\", _hoisted_8, [_hoisted_9, _hoisted_10, _createElementVNode(\"tbody\", null, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.paginatedNotices, notice => {\n    return _openBlock(), _createElementBlock(\"tr\", {\n      key: notice.id\n    }, [_createElementVNode(\"td\", null, _toDisplayString(notice.id), 1 /* TEXT */), _createElementVNode(\"td\", null, \"[\" + _toDisplayString(notice.category) + \"] \" + _toDisplayString(notice.title), 1 /* TEXT */), _createElementVNode(\"td\", null, _toDisplayString(notice.date), 1 /* TEXT */)]);\n  }), 128 /* KEYED_FRAGMENT */))])]), _createElementVNode(\"div\", {\n    class: \"pagination\",\n    style: _normalizeStyle({\n      width: $options.paginationWidthAuto + 'px'\n    })\n  }, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($options.maxPage, pageNumber => {\n    return _openBlock(), _createElementBlock(\"button\", {\n      class: \"noticeNumberBtn\",\n      key: pageNumber,\n      onClick: $event => $options.changePage(pageNumber),\n      disabled: pageNumber === $data.currentPage\n    }, _toDisplayString(pageNumber), 9 /* TEXT, PROPS */, _hoisted_11);\n  }), 128 /* KEYED_FRAGMENT */))], 4 /* STYLE */)]);\n}","map":{"version":3,"names":["class","id","_createElementVNode","value","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","type","$data","filterStartDate","$event","_hoisted_4","filterEndDate","_hoisted_5","filterCategory","_hoisted_6","_Fragment","_renderList","noticeCategorys","itm","key","_hoisted_7","onClick","_cache","args","$options","resetFilter","_hoisted_8","_hoisted_9","_hoisted_10","paginatedNotices","notice","_toDisplayString","category","title","date","style","_normalizeStyle","width","paginationWidthAuto","maxPage","pageNumber","changePage","disabled","currentPage","_hoisted_11"],"sources":["D:\\바탕화면 파일\\Dev\\html\\vue-web-asgm\\src\\views\\NoticeView.vue"],"sourcesContent":["<template>\r\n    <div class=\"Notice\">\r\n      <div id=\"noticeFilter\">\r\n        <label>시작일:</label>\r\n        <input type=\"date\" v-model=\"filterStartDate\" />\r\n        <label>종료일:</label>\r\n        <input type=\"date\" v-model=\"filterEndDate\" />\r\n        <label>카테고리:</label>\r\n        <select v-model=\"filterCategory\">\r\n          <option value=\"\">All categories</option>\r\n          <option v-for=\"itm in noticeCategorys\" :key=\"itm\" :value=\"itm\">{{ itm }}</option>\r\n        </select>\r\n        <button @click=\"resetFilter\">필터 제거</button>\r\n      </div>\r\n      <table id=\"noticeTable\">\r\n        <colgroup>\r\n            <col>\r\n            <col class=\"s\">\r\n            <col>\r\n        </colgroup>\r\n        <thead>\r\n          <tr>\r\n            <th>번호</th>\r\n            <th>제목</th>\r\n            <th>날짜</th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr v-for=\"notice in paginatedNotices\" :key=\"notice.id\">\r\n            <td>{{ notice.id }}</td>\r\n            <td>[{{ notice.category }}] {{ notice.title }}</td>\r\n            <td>{{ notice.date }}</td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n      <div class=\"pagination\" :style=\"{width: paginationWidthAuto + 'px'}\">\r\n        <button class=\"noticeNumberBtn\" v-for=\"pageNumber in maxPage\" :key=\"pageNumber\" @click=\"changePage(pageNumber)\" :disabled=\"pageNumber === currentPage\">\r\n          {{ pageNumber }}\r\n        </button>\r\n      </div>\r\n    </div>\r\n  </template>\r\n\r\n<script>\r\nexport default {\r\n  name: 'NoticeView',\r\n  data () {\r\n    return {\r\n      notices: [\r\n        { id: 1, title: '새로운 판매자 대시보드 기능이 추가되었습니다!', category: '기능 업데이트', date: '2023-05-01' },\r\n        { id: 2, title: '판매자 커뮤니티가 오픈되었습니다!', category: '커뮤니티', date: '2023-05-02' },\r\n        { id: 3, title: '상품 등록 방법이 간소화 되었습니다.', category: '상품 관리', date: '2023-05-03' },\r\n        { id: 4, title: '판매 수수료가 조정되었습니다.', category: '수수료', date: '2023-05-04' },\r\n        { id: 5, title: '오픈마켓 사용자 앱 업데이트 안내', category: '앱 업데이트', date: '2023-05-05' },\r\n        { id: 6, title: '판매자 센터 전화번호 변경 안내', category: '연락처', date: '2023-05-06' },\r\n        { id: 7, title: '상품 사진 업로드 방식 변경 안내', category: '상품 관리', date: '2023-05-07' },\r\n        { id: 8, title: '판매자 이용 약관 변경 안내', category: '약관', date: '2023-05-08' },\r\n        { id: 9, title: '상품 리뷰 관리 기능 업데이트 안내', category: '기능 업데이트', date: '2023-05-09' },\r\n        { id: 10, title: '2024년 새해 목표 및 계획 소개', category: '계획', date: '2023-05-10' },\r\n        { id: 11, title: '판매자 정보 수정 방법 안내', category: '판매자 정보', date: '2023-05-11' },\r\n        { id: 12, title: '상품 가격 조정 방법 안내', category: '상품 관리', date: '2023-05-12' },\r\n        { id: 13, title: '후기 관리 방법 업데이트', category: '리뷰', date: '2023-05-13' },\r\n        { id: 14, title: '판매자 배송 안내 사항 업데이트', category: '배송', date: '2023-05-14' },\r\n        { id: 15, title: '안전한 거래를 위한 팁 공유', category: '안전', date: '2023-05-15' },\r\n        { id: 16, title: '판매자 이용 가이드라인 업데이트', category: '가이드라인', date: '2023-05-16' },\r\n        { id: 17, title: '프로모션 참여 방법 안내', category: '프로모션', date: '2023-05-17' },\r\n        { id: 18, title: '판매량 통계 조회 방법 안내', category: '통계', date: '2023-05-18' },\r\n        { id: 19, title: '상품 카테고리 변경 방법 안내', category: '상품 관리', date: '2023-05-19' },\r\n        { id: 20, title: '블랙프라이데이 이벤트 안내', category: '이벤트', date: '2023-05-20' },\r\n        { id: 21, title: '상품 리턴 및 환불 규정 업데이트', category: '환불', date: '2023-05-21' },\r\n        { id: 22, title: '판매자 대시보드 보안 업데이트 안내', category: '보안', date: '2023-05-22' },\r\n        { id: 23, title: '크리스마스 이벤트 참여 방법 안내', category: '이벤트', date: '2023-05-23' },\r\n        { id: 24, title: '영업이익 공개 및 계획 소개', category: '계획', date: '2023-05-24' },\r\n        { id: 25, title: '신년 이벤트 참여 방법 안내', category: '이벤트', date: '2023-05-25' },\r\n        { id: 26, title: '판매자 피드백 수렴 방법 안내', category: '피드백', date: '2023-05-26' },\r\n        { id: 27, title: '구매자 문의 답변 방법 안내', category: '문의', date: '2023-05-27' },\r\n        { id: 28, title: '보안 위협 대응 및 대비 안내', category: '보안', date: '2023-05-28' },\r\n        { id: 29, title: '중요 공지사항 알림 설정 방법', category: '알림', date: '2023-05-29' },\r\n        { id: 30, title: '공휴일 휴무 안내', category: '휴무', date: '2023-05-30' }\r\n      ],\r\n      filterStartDate: '',\r\n      filterEndDate: '',\r\n      filterCategory: '',\r\n      currentPage: 1,\r\n      noticesPerPage: 20,\r\n      noticeCategorys: [\r\n        '기능 업데이트', '커뮤니티', '상품 관리', '수수료', '앱 업데이트',\r\n        '연락처', '약관', '계획', '판매자 정보', '리뷰',\r\n        '배송', '안전', '가이드라인', '프로모션', '통계',\r\n        '이벤트', '환불', '보안', '피드백', '문의',\r\n        '알림', '휴무'\r\n      ],\r\n      paginationWidth: 48\r\n    }\r\n  },\r\n  computed: {\r\n    filteredNotices () {\r\n      const startDate = this.filterStartDate ? new Date(this.filterStartDate) : null\r\n      const endDate = this.filterEndDate ? new Date(this.filterEndDate) : null\r\n      if (endDate) {\r\n        endDate.setDate(endDate.getDate() + 1)\r\n      }\r\n      return this.notices.filter((notice) => {\r\n        const noticeDate = new Date(notice.date)\r\n        if (startDate === null && endDate === null) {\r\n          return this.filterCategory === '' || notice.category === this.filterCategory\r\n        } else if (startDate === null) {\r\n          return (this.filterCategory === '' || notice.category === this.filterCategory) && noticeDate < endDate\r\n        } else if (endDate === null) {\r\n          return (this.filterCategory === '' || notice.category === this.filterCategory) && noticeDate >= startDate\r\n        } else {\r\n          return (this.filterCategory === '' || notice.category === this.filterCategory) && noticeDate >= startDate && noticeDate < endDate\r\n        }\r\n      })\r\n    },\r\n    paginatedNotices () {\r\n      const start = (this.currentPage - 1) * this.noticesPerPage\r\n      return this.filteredNotices.slice(start, start + this.noticesPerPage)\r\n    },\r\n    maxPage () {\r\n      return Math.ceil(this.filteredNotices.length / this.noticesPerPage)\r\n    },\r\n    paginationWidthAuto () {\r\n      return this.maxPage * 36 + (this.maxPage - 1) * 16\r\n    }\r\n  },\r\n  methods: {\r\n    changePage (pageNumber) {\r\n      this.currentPage = pageNumber\r\n    },\r\n    resetFilter () {\r\n      this.filterStartDate = ''\r\n      this.filterEndDate = ''\r\n      this.filterCategory = ''\r\n    }\r\n  }\r\n}\r\n</script>\r\n\r\n<style scoped>\r\n    @import '@/style/notice.css';\r\n</style>\r\n"],"mappings":";;;EACSA,KAAK,EAAC;AAAQ;;EACZC,EAAE,EAAC;AAAc;gEACpBC,mBAAA,CAAmB,eAAZ,MAAI;gEAEXA,mBAAA,CAAmB,eAAZ,MAAI;gEAEXA,mBAAA,CAAoB,eAAb,OAAK;gEAEVA,mBAAA,CAAwC;EAAhCC,KAAK,EAAC;AAAE,GAAC,gBAAc;;;EAK5BF,EAAE,EAAC;AAAa;gEACrBC,mBAAA,CAIW,mB,aAHPA,mBAAA,CAAK,Q,aACLA,mBAAA,CAAe;EAAVF,KAAK,EAAC;AAAG,I,aACdE,mBAAA,CAAK,O;iEAETA,mBAAA,CAMQ,gB,aALNA,mBAAA,CAIK,a,aAHHA,mBAAA,CAAW,YAAP,IAAE,G,aACNA,mBAAA,CAAW,YAAP,IAAE,G,aACNA,mBAAA,CAAW,YAAP,IAAE,E;;;uBAvBdE,mBAAA,CAuCM,OAvCNC,UAuCM,GAtCJH,mBAAA,CAWM,OAXNI,UAWM,GAVJC,UAAmB,E,gBACnBL,mBAAA,CAA+C;IAAxCM,IAAI,EAAC,MAAM;+DAAUC,KAAA,CAAAC,eAAe,GAAAC,MAAA;iDAAfF,KAAA,CAAAC,eAAe,E,GAC3CE,UAAmB,E,gBACnBV,mBAAA,CAA6C;IAAtCM,IAAI,EAAC,MAAM;+DAAUC,KAAA,CAAAI,aAAa,GAAAF,MAAA;iDAAbF,KAAA,CAAAI,aAAa,E,GACzCC,UAAoB,E,gBACpBZ,mBAAA,CAGS;+DAHQO,KAAA,CAAAM,cAAc,GAAAJ,MAAA;MAC7BK,UAAwC,G,kBACxCZ,mBAAA,CAAiFa,SAAA,QAAAC,WAAA,CAA3DT,KAAA,CAAAU,eAAe,EAAtBC,GAAG;yBAAlBhB,mBAAA,CAAiF;MAAzCiB,GAAG,EAAED,GAAG;MAAGjB,KAAK,EAAEiB;wBAAQA,GAAG,wBAAAE,UAAA;2EAFtDb,KAAA,CAAAM,cAAc,E,GAI/Bb,mBAAA,CAA2C;IAAlCqB,OAAK,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,WAAA,IAAAD,QAAA,CAAAC,WAAA,IAAAF,IAAA,CAAW;KAAE,OAAK,E,GAEpCvB,mBAAA,CAoBQ,SApBR0B,UAoBQ,GAnBNC,UAIW,EACXC,WAMQ,EACR5B,mBAAA,CAMQ,iB,kBALNE,mBAAA,CAIKa,SAAA,QAAAC,WAAA,CAJgBQ,QAAA,CAAAK,gBAAgB,EAA1BC,MAAM;yBAAjB5B,mBAAA,CAIK;MAJmCiB,GAAG,EAAEW,MAAM,CAAC/B;QAClDC,mBAAA,CAAwB,YAAA+B,gBAAA,CAAjBD,MAAM,CAAC/B,EAAE,kBAChBC,mBAAA,CAAmD,YAA/C,GAAC,GAAA+B,gBAAA,CAAGD,MAAM,CAACE,QAAQ,IAAG,IAAE,GAAAD,gBAAA,CAAGD,MAAM,CAACG,KAAK,kBAC3CjC,mBAAA,CAA0B,YAAA+B,gBAAA,CAAnBD,MAAM,CAACI,IAAI,iB;sCAIxBlC,mBAAA,CAIM;IAJDF,KAAK,EAAC,YAAY;IAAEqC,KAAK,EAAAC,eAAA;MAAAC,KAAA,EAAUb,QAAA,CAAAc,mBAAmB;IAAA;yBACzDpC,mBAAA,CAESa,SAAA,QAAAC,WAAA,CAF4CQ,QAAA,CAAAe,OAAO,EAArBC,UAAU;yBAAjDtC,mBAAA,CAES;MAFDJ,KAAK,EAAC,iBAAiB;MAAgCqB,GAAG,EAAEqB,UAAU;MAAGnB,OAAK,EAAAZ,MAAA,IAAEe,QAAA,CAAAiB,UAAU,CAACD,UAAU;MAAIE,QAAQ,EAAEF,UAAU,KAAKjC,KAAA,CAAAoC;wBACrIH,UAAU,wBAAAI,WAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}