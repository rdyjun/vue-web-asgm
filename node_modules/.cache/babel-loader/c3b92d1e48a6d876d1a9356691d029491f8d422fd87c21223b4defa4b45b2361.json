{"ast":null,"code":"import { createElementVNode as _createElementVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString } from \"vue\";\nconst _hoisted_1 = {\n  class: \"about\"\n};\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"h1\", null, \"자기소개\", -1);\nconst _hoisted_3 = {\n  id: \"aboutTop\"\n};\nconst _hoisted_4 = {\n  class: \"imageContainer\"\n};\nconst _hoisted_5 = [\"src\"];\nconst _hoisted_6 = {\n  class: \"personalInfo\"\n};\nconst _hoisted_7 = {\n  class: \"str\"\n};\nconst _hoisted_8 = {\n  class: \"infoContainer\"\n};\nconst _hoisted_9 = {\n  class: \"goals\"\n};\nconst _hoisted_10 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"꿈 또는 목표\", -1);\nconst _hoisted_11 = {\n  class: \"skills\"\n};\nconst _hoisted_12 = /*#__PURE__*/_createElementVNode(\"h2\", null, \"기술\", -1);\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _createElementVNode(\"div\", _hoisted_3, [_createElementVNode(\"div\", _hoisted_4, [_createElementVNode(\"img\", {\n    src: $data.imgSrc\n  }, null, 8, _hoisted_5)]), _createElementVNode(\"div\", _hoisted_6, [(_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.userDataTitle, val => {\n    return _openBlock(), _createElementBlock(\"div\", {\n      key: val\n    }, [_createElementVNode(\"p\", _hoisted_7, _toDisplayString(val), 1), _createElementVNode(\"p\", null, _toDisplayString($data.userData[val]), 1)]);\n  }), 128))])]), _createElementVNode(\"div\", _hoisted_8, [_createElementVNode(\"div\", _hoisted_9, [_hoisted_10, _createElementVNode(\"p\", null, _toDisplayString($data.dream), 1)]), _createElementVNode(\"div\", _hoisted_11, [_hoisted_12, _createElementVNode(\"p\", null, _toDisplayString($data.skills), 1)])])]);\n}","map":{"version":3,"names":["class","_createElementVNode","id","_createElementBlock","_hoisted_1","_hoisted_2","_hoisted_3","_hoisted_4","src","$data","imgSrc","_hoisted_5","_hoisted_6","_Fragment","_renderList","userDataTitle","val","key","_hoisted_7","_toDisplayString","userData","_hoisted_8","_hoisted_9","_hoisted_10","dream","_hoisted_11","_hoisted_12","skills"],"sources":["/Users/joosungjun/Documents/Dev/frontEnd/vue-web-asgm/src/views/AboutView.vue"],"sourcesContent":["<template>\n  <div class=\"about\">\n    <h1>자기소개</h1>\n    <div id=\"aboutTop\">\n      <div class=\"imageContainer\">\n        <img :src=\"imgSrc\">\n      </div>\n      <div class=\"personalInfo\">\n        <div v-for=\"val in userDataTitle\" :key=\"val\"><p class=\"str\">{{ val }}</p><p>{{ userData[val] }}</p></div>\n      </div>\n    </div>\n    <div class=\"infoContainer\">\n      <div class=\"goals\">\n        <h2>꿈 또는 목표</h2>\n        <p>{{ dream }}</p>\n      </div>\n      <div class=\"skills\">\n        <h2>기술</h2>\n        <p>{{ skills }}</p>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport imgSrc from '@/assets/img.jpeg'\n\nexport default {\n  name: 'AboutView',\n  data () {\n    return {\n      imgSrc: imgSrc,\n      userData:\n        {\n          이름: '주성준',\n          학과: '컴퓨터소프트웨어',\n          학번: '20222296',\n          나이: '24',\n          Github: 'rdyjun'\n        },\n      userDataTitle: ['이름', '학과', '학번', '나이', 'Github'],\n      dream: '전공 과정에서 배운 내용을 토대로 데이터를 공부하여, 데이터 엔지니어가 되는 것이 저의 첫 번째 목표입니다. 이에 그치지 않고, 데이터와 관련된 다양한 분야를 배우고 실무에 적용해보고 싶으며, 머신러닝, 딥러닝 교육 등을 통해 더욱 정확하고 올바른 데이터를 관리 & 통계 & 예상 데이터 생성 하는 것이 목표 입니다.',\n      skills: '페이지 설명에 앞서 로그인 페이지의 주소가 /login으로,\\nnpm run serve 실행 시 첫 페이지가 메인(/) 페이지로 이동됩니다.\\n우측 상단의 로그아웃 버튼을 통해 로그인 페이지로 이동할 수 있습니다.\\n로그인 페이지에 적용된 기능으로, watch를 통해 입력되는 비밀번호 데이터를 감시하여 8글자 미만이라면 빨간색으로 힌트를 출력하도록 하였습니다. \\n또한 methods를 통해 아이디, 비밀번호 입력란에 마우스 클릭(onFocus) 했을 때 힌트를 주고자 box-shadow에 컬러를 주었습니다. \\n로그인 버튼, 회원가입 버튼, 깃허브, 카카오톡, 구글 버튼에 모두 methods에 정의된 moveToMainWithAlert 함수를 사용하여\\nalert출력 후 메인 페이지로 이동하도록 하였습니다.\\n\\n회원가입도 마찬가지로 가입 버튼을 누르면 메인 페이지로 이동하게 구성하였으며,\\n데이터를 입력하지 않을 경우 가입 버튼을 누를 수 없게 됩니다.\\n\\n로그인을 통해 메인 페이지로 이동하게되면, 여러 데이터들이 출력됩니다.\\n왼쪽에 gnb와 상단에 헤더, 하단에 푸터가 존재합니다.\\n메인으로 HomeView가 출력되며, 배열을 통해 상단에 발송정보를 출력하였습니다.\\n하단에는 각 카테고리별 데이터를 출력하는 카드이며,\\n모두 컴포넌트로 분리하여 작업하였습니다. 각 데이터는 배열로 만들어졌으며,\\nv-for를 통해 출력하였습니다. 판매자 평점의 경우 데이터 수정 시 watch로 색상이 변경되도록 하였습니다.\\n\\n헤더에는 로그아웃 기능만 구현되었으며, 로그아웃 버튼 클릭 시 로그인 페이지로 넘어갑니다.\\n\\n사이드바는 각 페이지로 이동하게되며, 로고 클릭 시 다시 HomeView로 이동합니다.\\n사이드바 메뉴에 마우스를 올리면 색이 애니메이션 되면서 바뀝니다.\\n\\n상품관리 페이지 클릭 시 상품을 관리하는 페이지로 이동되며 vue에서 관리되는 data를 table 형식으로 출력합니다.\\ncheckbox input박스는 맨 위 checkbox를 클릭 시 전체 선택 및 전체 해제 됩니다. 이 역시 watch 입니다.\\n\\n주문관리에는 주문 목록을 출력하며, 상단의 각 카테고리(결제완료 및 상품준비 등)를 누르면\\n각 카테고리의 데이터만 필터되어 출력됩니다. 또한 우측의 숫자 select 박스를 통해 출력될 개수입니다.\\n개수가 넘어간다면 새 페이지를 만들게 됩니다.\\n\\n공지사항 페이지는 주문 페이지와 비슷하게 구성되었으며, 시작일과 종료일, 카테고리 지정을 통해 필터가 가능합니다.\\n필터 제거를 통해 모두 제거할 수 있습니다.'\n    }\n  }\n}\n</script>\n\n<style>\n@import '@/style/about.css';\n\n</style>\n"],"mappings":";;EACOA,KAAK,EAAC;AAAO;gCAChBC,mBAAA,CAAa,YAAT,MAAI;;EACHC,EAAE,EAAC;AAAU;;EACXF,KAAK,EAAC;AAAgB;;;EAGtBA,KAAK,EAAC;AAAc;;EACyBA,KAAK,EAAC;AAAK;;EAG1DA,KAAK,EAAC;AAAe;;EACnBA,KAAK,EAAC;AAAO;iCAChBC,mBAAA,CAAgB,YAAZ,SAAO;;EAGRD,KAAK,EAAC;AAAQ;iCACjBC,mBAAA,CAAW,YAAP,IAAE;;uBAhBZE,mBAAA,CAoBM,OApBNC,UAoBM,GAnBJC,UAAa,EACbJ,mBAAA,CAOM,OAPNK,UAOM,GANJL,mBAAA,CAEM,OAFNM,UAEM,GADJN,mBAAA,CAAmB;IAAbO,GAAG,EAAEC,KAAA,CAAAC;EAAM,YAAAC,UAAA,E,GAEnBV,mBAAA,CAEM,OAFNW,UAEM,I,kBADJT,mBAAA,CAAyGU,SAAA,QAAAC,WAAA,CAAtFL,KAAA,CAAAM,aAAa,EAApBC,GAAG;yBAAfb,mBAAA,CAAyG;MAAtEc,GAAG,EAAED;IAAG,IAAEf,mBAAA,CAA4B,KAA5BiB,UAA4B,EAAAC,gBAAA,CAAVH,GAAG,OAAOf,mBAAA,CAA0B,WAAAkB,gBAAA,CAApBV,KAAA,CAAAW,QAAQ,CAACJ,GAAG,O;iBAG/Ff,mBAAA,CASM,OATNoB,UASM,GARJpB,mBAAA,CAGM,OAHNqB,UAGM,GAFJC,WAAgB,EAChBtB,mBAAA,CAAkB,WAAAkB,gBAAA,CAAZV,KAAA,CAAAe,KAAK,M,GAEbvB,mBAAA,CAGM,OAHNwB,WAGM,GAFJC,WAAW,EACXzB,mBAAA,CAAmB,WAAAkB,gBAAA,CAAbV,KAAA,CAAAkB,MAAM,M"},"metadata":{},"sourceType":"module","externalDependencies":[]}