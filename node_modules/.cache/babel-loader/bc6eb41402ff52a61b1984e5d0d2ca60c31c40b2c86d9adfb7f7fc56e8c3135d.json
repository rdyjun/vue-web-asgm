{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, normalizeClass as _normalizeClass, createTextVNode as _createTextVNode, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"registerView\"\n};\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"h1\", null, \"회원가입\", -1 /* HOISTED */);\nconst _hoisted_3 = {\n  for: \"username\"\n};\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"span\", null, \"아이디:\", -1 /* HOISTED */);\nconst _hoisted_5 = {\n  for: \"password\"\n};\nconst _hoisted_6 = {\n  key: 0,\n  class: \"hint\"\n};\nconst _hoisted_7 = {\n  for: \"confirmPassword\"\n};\nconst _hoisted_8 = {\n  for: \"name\"\n};\nconst _hoisted_9 = {\n  for: \"phone\"\n};\nconst _hoisted_10 = {\n  for: \"email\"\n};\nconst _hoisted_11 = /*#__PURE__*/_createElementVNode(\"input\", {\n  id: \"userRegisterBtn\",\n  type: \"submit\",\n  value: \"가입\"\n}, null, -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _createElementVNode(\"form\", {\n    onSubmit: _cache[6] || (_cache[6] = (...args) => $options.submitForm && $options.submitForm(...args))\n  }, [_createElementVNode(\"label\", _hoisted_3, [_hoisted_4, _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    id: \"username\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.username = $event),\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.username]])]), _createElementVNode(\"label\", _hoisted_5, [_createTextVNode(\"비밀번호: \"), _withDirectives(_createElementVNode(\"input\", {\n    type: \"password\",\n    id: \"password\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.password = $event),\n    required: \"\",\n    class: _normalizeClass({\n      'red': $data.password.length < 8\n    })\n  }, null, 2 /* CLASS */), [[_vModelText, $data.password]])]), $data.password.length < 8 ? (_openBlock(), _createElementBlock(\"span\", _hoisted_6, \"비밀번호는 8글자 이상 입력해야 합니다.\")) : _createCommentVNode(\"v-if\", true), _createElementVNode(\"label\", _hoisted_7, [_createTextVNode(\"비밀번호 확인: \"), _withDirectives(_createElementVNode(\"input\", {\n    type: \"password\",\n    id: \"confirmPassword\",\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.confirmPassword = $event),\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.confirmPassword]])]), _createElementVNode(\"label\", _hoisted_8, [_createTextVNode(\"이름: \"), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    id: \"name\",\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $data.name = $event),\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.name]])]), _createElementVNode(\"label\", _hoisted_9, [_createTextVNode(\"전화번호: \"), _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    id: \"phone\",\n    \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => $data.phone = $event),\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.phone]])]), _createElementVNode(\"label\", _hoisted_10, [_createTextVNode(\"이메일: \"), _withDirectives(_createElementVNode(\"input\", {\n    type: \"email\",\n    id: \"email\",\n    \"onUpdate:modelValue\": _cache[5] || (_cache[5] = $event => $data.email = $event),\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.email]])]), _hoisted_11], 32 /* HYDRATE_EVENTS */)]);\n}","map":{"version":3,"names":["class","_createElementVNode","for","id","type","value","_createElementBlock","_hoisted_1","_hoisted_2","onSubmit","_cache","args","$options","submitForm","_hoisted_3","_hoisted_4","$data","username","$event","required","_hoisted_5","password","_normalizeClass","length","_hoisted_6","_hoisted_7","confirmPassword","_hoisted_8","name","_hoisted_9","phone","_hoisted_10","email","_hoisted_11"],"sources":["/Users/joosungjun/Documents/Dev/frontEnd/vue-web-asgm/src/views/RegisterView.vue"],"sourcesContent":["<template>\n    <div class=\"registerView\">\n      <h1>회원가입</h1>\n      <form @submit=\"submitForm\">\n        <label for=\"username\"><span>아이디:</span><input type=\"text\" id=\"username\" v-model=\"username\" required></label>\n        <label for=\"password\">비밀번호: <input type=\"password\" id=\"password\" v-model=\"password\" required :class=\"{ 'red': password.length < 8 }\"></label>\n        <span v-if=\"password.length < 8\" class=\"hint\">비밀번호는 8글자 이상 입력해야 합니다.</span>\n\n        <label for=\"confirmPassword\">비밀번호 확인: <input type=\"password\" id=\"confirmPassword\" v-model=\"confirmPassword\" required></label>\n\n        <label for=\"name\">이름: <input type=\"text\" id=\"name\" v-model=\"name\" required></label>\n        <label for=\"phone\">전화번호: <input type=\"text\" id=\"phone\" v-model=\"phone\" required></label>\n\n        <label for=\"email\">이메일: <input type=\"email\" id=\"email\" v-model=\"email\" required></label>\n        <input id=\"userRegisterBtn\" type=\"submit\" value=\"가입\">\n      </form>\n    </div>\n  </template>\n\n<script>\nexport default {\n  name: 'RegisterView',\n  data () {\n    return {\n      username: '',\n      password: '',\n      confirmPassword: '',\n      name: '',\n      phone: '',\n      email: ''\n    }\n  },\n  methods: {\n    submitForm (event) {\n      event.preventDefault()\n      // 여기에 폼 데이터를 처리하는 로직을 추가하세요.\n    }\n  }\n}\n</script>\n<style>\n  @import '@/style/register.css';\n  @import '@/style/wrap.css';\n</style>\n"],"mappings":";;EACSA,KAAK,EAAC;AAAc;gCACvBC,mBAAA,CAAa,YAAT,MAAI;;EAECC,GAAG,EAAC;AAAU;gCAACD,mBAAA,CAAiB,cAAX,MAAI;;EACzBC,GAAG,EAAC;AAAU;;;EACYF,KAAK,EAAC;;;EAEhCE,GAAG,EAAC;AAAiB;;EAErBA,GAAG,EAAC;AAAM;;EACVA,GAAG,EAAC;AAAO;;EAEXA,GAAG,EAAC;AAAO;iCAClBD,mBAAA,CAAqD;EAA9CE,EAAE,EAAC,iBAAiB;EAACC,IAAI,EAAC,QAAQ;EAACC,KAAK,EAAC;;;;uBAbpDC,mBAAA,CAeM,OAfNC,UAeM,GAdJC,UAAa,EACbP,mBAAA,CAYO;IAZAQ,QAAM,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,UAAA,IAAAD,QAAA,CAAAC,UAAA,IAAAF,IAAA,CAAU;MACvBV,mBAAA,CAA4G,SAA5Ga,UAA4G,GAAtFC,UAAiB,E,gBAAAd,mBAAA,CAA6D;IAAtDG,IAAI,EAAC,MAAM;IAACD,EAAE,EAAC,UAAU;+DAAUa,KAAA,CAAAC,QAAQ,GAAAC,MAAA;IAAEC,QAAQ,EAAR;iDAAVH,KAAA,CAAAC,QAAQ,E,KACzFhB,mBAAA,CAA6I,SAA7ImB,UAA6I,G,iBAAvH,QAAM,G,gBAAAnB,mBAAA,CAAyG;IAAlGG,IAAI,EAAC,UAAU;IAACD,EAAE,EAAC,UAAU;+DAAUa,KAAA,CAAAK,QAAQ,GAAAH,MAAA;IAAEC,QAAQ,EAAR,EAAQ;IAAEnB,KAAK,EAAAsB,eAAA;MAAA,OAAWN,KAAA,CAAAK,QAAQ,CAACE,MAAM;IAAA;0CAAnDP,KAAA,CAAAK,QAAQ,E,KACtEL,KAAA,CAAAK,QAAQ,CAACE,MAAM,Q,cAA3BjB,mBAAA,CAA2E,QAA3EkB,UAA2E,EAA7B,wBAAsB,K,mCAEpEvB,mBAAA,CAA6H,SAA7HwB,UAA6H,G,iBAAhG,WAAS,G,gBAAAxB,mBAAA,CAA+E;IAAxEG,IAAI,EAAC,UAAU;IAACD,EAAE,EAAC,iBAAiB;+DAAUa,KAAA,CAAAU,eAAe,GAAAR,MAAA;IAAEC,QAAQ,EAAR;iDAAjBH,KAAA,CAAAU,eAAe,E,KAE1GzB,mBAAA,CAAmF,SAAnF0B,UAAmF,G,iBAAjE,MAAI,G,gBAAA1B,mBAAA,CAAqD;IAA9CG,IAAI,EAAC,MAAM;IAACD,EAAE,EAAC,MAAM;+DAAUa,KAAA,CAAAY,IAAI,GAAAV,MAAA;IAAEC,QAAQ,EAAR;iDAANH,KAAA,CAAAY,IAAI,E,KAChE3B,mBAAA,CAAwF,SAAxF4B,UAAwF,G,iBAArE,QAAM,G,gBAAA5B,mBAAA,CAAuD;IAAhDG,IAAI,EAAC,MAAM;IAACD,EAAE,EAAC,OAAO;+DAAUa,KAAA,CAAAc,KAAK,GAAAZ,MAAA;IAAEC,QAAQ,EAAR;iDAAPH,KAAA,CAAAc,KAAK,E,KAErE7B,mBAAA,CAAwF,SAAxF8B,WAAwF,G,iBAArE,OAAK,G,gBAAA9B,mBAAA,CAAwD;IAAjDG,IAAI,EAAC,OAAO;IAACD,EAAE,EAAC,OAAO;+DAAUa,KAAA,CAAAgB,KAAK,GAAAd,MAAA;IAAEC,QAAQ,EAAR;iDAAPH,KAAA,CAAAgB,KAAK,E,KACrEC,WAAqD,C"},"metadata":{},"sourceType":"module","externalDependencies":[]}