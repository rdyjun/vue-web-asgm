{"ast":null,"code":"import { createElementVNode as _createElementVNode, vModelText as _vModelText, withDirectives as _withDirectives, normalizeClass as _normalizeClass, openBlock as _openBlock, createElementBlock as _createElementBlock, createCommentVNode as _createCommentVNode } from \"vue\";\nconst _hoisted_1 = {\n  class: \"registerView\"\n};\nconst _hoisted_2 = /*#__PURE__*/_createElementVNode(\"h1\", null, \"회원가입\", -1 /* HOISTED */);\nconst _hoisted_3 = /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"username\"\n}, \"아이디:\", -1 /* HOISTED */);\nconst _hoisted_4 = /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"password\"\n}, \"비밀번호:\", -1 /* HOISTED */);\nconst _hoisted_5 = {\n  key: 0,\n  class: \"hint\"\n};\nconst _hoisted_6 = /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"confirmPassword\"\n}, \"비밀번호 확인:\", -1 /* HOISTED */);\nconst _hoisted_7 = /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"name\"\n}, \"이름:\", -1 /* HOISTED */);\nconst _hoisted_8 = /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"phone\"\n}, \"전화번호:\", -1 /* HOISTED */);\nconst _hoisted_9 = /*#__PURE__*/_createElementVNode(\"label\", {\n  for: \"email\"\n}, \"이메일:\", -1 /* HOISTED */);\nconst _hoisted_10 = /*#__PURE__*/_createElementVNode(\"button\", {\n  type: \"submit\"\n}, \"가입\", -1 /* HOISTED */);\n\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"div\", _hoisted_1, [_hoisted_2, _createElementVNode(\"form\", {\n    onSubmit: _cache[6] || (_cache[6] = (...args) => $options.submitForm && $options.submitForm(...args))\n  }, [_hoisted_3, _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    id: \"username\",\n    \"onUpdate:modelValue\": _cache[0] || (_cache[0] = $event => $data.username = $event),\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.username]]), _hoisted_4, _withDirectives(_createElementVNode(\"input\", {\n    type: \"password\",\n    id: \"password\",\n    \"onUpdate:modelValue\": _cache[1] || (_cache[1] = $event => $data.password = $event),\n    required: \"\",\n    class: _normalizeClass({\n      'red': $data.password.length < 8\n    })\n  }, null, 2 /* CLASS */), [[_vModelText, $data.password]]), $data.password.length < 8 ? (_openBlock(), _createElementBlock(\"span\", _hoisted_5, \"비밀번호는 8글자 이상 입력해야 합니다.\")) : _createCommentVNode(\"v-if\", true), _hoisted_6, _withDirectives(_createElementVNode(\"input\", {\n    type: \"password\",\n    id: \"confirmPassword\",\n    \"onUpdate:modelValue\": _cache[2] || (_cache[2] = $event => $data.confirmPassword = $event),\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.confirmPassword]]), _hoisted_7, _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    id: \"name\",\n    \"onUpdate:modelValue\": _cache[3] || (_cache[3] = $event => $data.name = $event),\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.name]]), _hoisted_8, _withDirectives(_createElementVNode(\"input\", {\n    type: \"text\",\n    id: \"phone\",\n    \"onUpdate:modelValue\": _cache[4] || (_cache[4] = $event => $data.phone = $event),\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.phone]]), _hoisted_9, _withDirectives(_createElementVNode(\"input\", {\n    type: \"email\",\n    id: \"email\",\n    \"onUpdate:modelValue\": _cache[5] || (_cache[5] = $event => $data.email = $event),\n    required: \"\"\n  }, null, 512 /* NEED_PATCH */), [[_vModelText, $data.email]]), _hoisted_10], 32 /* HYDRATE_EVENTS */)]);\n}","map":{"version":3,"names":["class","_createElementVNode","for","type","_createElementBlock","_hoisted_1","_hoisted_2","onSubmit","_cache","args","$options","submitForm","_hoisted_3","id","$data","username","$event","required","_hoisted_4","password","_normalizeClass","length","_hoisted_5","_hoisted_6","confirmPassword","_hoisted_7","name","_hoisted_8","phone","_hoisted_9","email","_hoisted_10"],"sources":["/Users/joosungjun/Documents/Dev/frontEnd/vue-web-asgm/src/views/RegisterView.vue"],"sourcesContent":["<template>\n    <div class=\"registerView\">\n      <h1>회원가입</h1>\n      <form @submit=\"submitForm\">\n        <label for=\"username\">아이디:</label>\n        <input type=\"text\" id=\"username\" v-model=\"username\" required>\n        <label for=\"password\">비밀번호:</label>\n        <input type=\"password\" id=\"password\" v-model=\"password\" required :class=\"{ 'red': password.length < 8 }\">\n        <span v-if=\"password.length < 8\" class=\"hint\">비밀번호는 8글자 이상 입력해야 합니다.</span>\n\n        <label for=\"confirmPassword\">비밀번호 확인:</label>\n        <input type=\"password\" id=\"confirmPassword\" v-model=\"confirmPassword\" required>\n\n        <label for=\"name\">이름:</label>\n        <input type=\"text\" id=\"name\" v-model=\"name\" required>\n\n        <label for=\"phone\">전화번호:</label>\n        <input type=\"text\" id=\"phone\" v-model=\"phone\" required>\n\n        <label for=\"email\">이메일:</label>\n        <input type=\"email\" id=\"email\" v-model=\"email\" required>\n\n        <button type=\"submit\">가입</button>\n      </form>\n    </div>\n  </template>\n\n<script>\nexport default {\n  name: 'RegisterView',\n  data () {\n    return {\n      username: '',\n      password: '',\n      confirmPassword: '',\n      name: '',\n      phone: '',\n      email: ''\n    }\n  },\n  methods: {\n    submitForm (event) {\n      event.preventDefault()\n      // 여기에 폼 데이터를 처리하는 로직을 추가하세요.\n    }\n  }\n}\n</script>  \n<style>\n  @import '@/style/product.css';\n  @import '@/style/product.css';\n  .red {\n    color: red;\n  }\n  .hint {\n    color: red;\n    font-size: 0.8em;\n  }\n</style>\n"],"mappings":";;EACSA,KAAK,EAAC;AAAc;gCACvBC,mBAAA,CAAa,YAAT,MAAI;gCAENA,mBAAA,CAAkC;EAA3BC,GAAG,EAAC;AAAU,GAAC,MAAI;gCAE1BD,mBAAA,CAAmC;EAA5BC,GAAG,EAAC;AAAU,GAAC,OAAK;;;EAEMF,KAAK,EAAC;;gCAEvCC,mBAAA,CAA6C;EAAtCC,GAAG,EAAC;AAAiB,GAAC,UAAQ;gCAGrCD,mBAAA,CAA6B;EAAtBC,GAAG,EAAC;AAAM,GAAC,KAAG;gCAGrBD,mBAAA,CAAgC;EAAzBC,GAAG,EAAC;AAAO,GAAC,OAAK;gCAGxBD,mBAAA,CAA+B;EAAxBC,GAAG,EAAC;AAAO,GAAC,MAAI;iCAGvBD,mBAAA,CAAiC;EAAzBE,IAAI,EAAC;AAAQ,GAAC,IAAE;;;uBArB5BC,mBAAA,CAuBM,OAvBNC,UAuBM,GAtBJC,UAAa,EACbL,mBAAA,CAoBO;IApBAM,QAAM,EAAAC,MAAA,QAAAA,MAAA,UAAAC,IAAA,KAAEC,QAAA,CAAAC,UAAA,IAAAD,QAAA,CAAAC,UAAA,IAAAF,IAAA,CAAU;MACvBG,UAAkC,E,gBAClCX,mBAAA,CAA6D;IAAtDE,IAAI,EAAC,MAAM;IAACU,EAAE,EAAC,UAAU;+DAAUC,KAAA,CAAAC,QAAQ,GAAAC,MAAA;IAAEC,QAAQ,EAAR;iDAAVH,KAAA,CAAAC,QAAQ,E,GAClDG,UAAmC,E,gBACnCjB,mBAAA,CAAyG;IAAlGE,IAAI,EAAC,UAAU;IAACU,EAAE,EAAC,UAAU;+DAAUC,KAAA,CAAAK,QAAQ,GAAAH,MAAA;IAAEC,QAAQ,EAAR,EAAQ;IAAEjB,KAAK,EAAAoB,eAAA;MAAA,OAAWN,KAAA,CAAAK,QAAQ,CAACE,MAAM;IAAA;0CAAnDP,KAAA,CAAAK,QAAQ,E,GAC1CL,KAAA,CAAAK,QAAQ,CAACE,MAAM,Q,cAA3BjB,mBAAA,CAA2E,QAA3EkB,UAA2E,EAA7B,wBAAsB,K,mCAEpEC,UAA6C,E,gBAC7CtB,mBAAA,CAA+E;IAAxEE,IAAI,EAAC,UAAU;IAACU,EAAE,EAAC,iBAAiB;+DAAUC,KAAA,CAAAU,eAAe,GAAAR,MAAA;IAAEC,QAAQ,EAAR;iDAAjBH,KAAA,CAAAU,eAAe,E,GAEpEC,UAA6B,E,gBAC7BxB,mBAAA,CAAqD;IAA9CE,IAAI,EAAC,MAAM;IAACU,EAAE,EAAC,MAAM;+DAAUC,KAAA,CAAAY,IAAI,GAAAV,MAAA;IAAEC,QAAQ,EAAR;iDAANH,KAAA,CAAAY,IAAI,E,GAE1CC,UAAgC,E,gBAChC1B,mBAAA,CAAuD;IAAhDE,IAAI,EAAC,MAAM;IAACU,EAAE,EAAC,OAAO;+DAAUC,KAAA,CAAAc,KAAK,GAAAZ,MAAA;IAAEC,QAAQ,EAAR;iDAAPH,KAAA,CAAAc,KAAK,E,GAE5CC,UAA+B,E,gBAC/B5B,mBAAA,CAAwD;IAAjDE,IAAI,EAAC,OAAO;IAACU,EAAE,EAAC,OAAO;+DAAUC,KAAA,CAAAgB,KAAK,GAAAd,MAAA;IAAEC,QAAQ,EAAR;iDAAPH,KAAA,CAAAgB,KAAK,E,GAE7CC,WAAiC,C"},"metadata":{},"sourceType":"module","externalDependencies":[]}